<!-- This contains common things shared among all projects in the SizeBench repo -->

<Project>
  <!-- These properties apply to both product and test code -->
  <PropertyGroup>
    <Nullable>enable</Nullable>
    
    <!-- Below this, in this PropertyGroup, is all about Code Analysis -->
    <AnalysisLevel>8</AnalysisLevel> <!-- Update this when upgrading from net8 -->
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>




  <!-- These properties and items apply only to product code. -->
  <PropertyGroup Condition="'$(SizeBenchTestCode)'!='true'">
    <!-- Workaround suggested here: https://github.com/microsoft/vstest/issues/4469 -->
    <TestProject>false</TestProject>
    <IsTestProject>false</IsTestProject>
  </PropertyGroup>
  <ItemGroup Condition="'$(SizeBenchTestCode)'!='true'">
    <!-- Workaround suggested here: https://github.com/microsoft/vstest/issues/4469 -->
    <ProjectCapability Remove="TestContainer"/>
  </ItemGroup>
  <ItemGroup Condition="'$(SizeBenchTestCode)'!='true'">
    <PackageReference Include="DotNet.ReproducibleBuilds">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="DotNet.ReproducibleBuilds.Isolated">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>



  <!-- These properties and items apply only to C# test code. -->
  <PropertyGroup Condition="'$(SizeBenchTestCode)'=='true' And '$(MSBuildProjectExtension)'=='.csproj'">
    <IsPackable>false</IsPackable>
    <TestProject>true</TestProject>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>
  <ItemGroup Condition="'$(SizeBenchTestCode)'=='true' And '$(MSBuildProjectExtension)'=='.csproj'">
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="MSTest.TestAdapter" />
    <PackageReference Include="MSTest.TestFramework" />
    <PackageReference Include="Moq" />
  </ItemGroup>
  <ItemGroup Condition="'$(SizeBenchTestCode)'=='true'">
    <Using Include="Microsoft.VisualStudio.TestTools.UnitTesting"/>
    <Using Include="Moq"/>
  </ItemGroup>



  <!-- This is all the stuff necessary to use DbgX at runtime, it's needed in multiple projects, so it's centralized here -->
  <ItemGroup Condition="'$(IncludeDbgXAssets)'=='true' and '$(MicrosoftDebuggingDataModelDbgModelApiXtnPath)' != ''">
    <Content Include="..\ExternalDependencies\DIA\msdia140.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <None Include="$(MicrosoftDebuggingDataModelDbgModelApiXtnPath)\**\*" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="%(RecursiveDir)%(FileName)%(Extension)"/>
  </ItemGroup>

  <!-- Embed the git hash in the assembly informational version -->
  <Target Name="InitializeSourceControlInformation" BeforeTargets="AddSourceRevisionToInformationalVersion">
    <Exec
      Command="git describe --long --always --dirty --exclude=* --abbrev=8"
      ConsoleToMSBuild="True"
      IgnoreExitCode="False"
      >
      <Output PropertyName="SourceRevisionId" TaskParameter="ConsoleOutput"/>
    </Exec>
  </Target>
</Project>
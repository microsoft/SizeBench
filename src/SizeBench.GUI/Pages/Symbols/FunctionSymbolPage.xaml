<navigation:SizeBenchPage x:Class="SizeBench.GUI.Pages.Symbols.FunctionSymbolPage"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                          xmlns:symbols="clr-namespace:SizeBench.AnalysisEngine.Symbols;assembly=SizeBench.AnalysisEngine"
                          xmlns:commands="clr-namespace:SizeBench.GUI.Commands"
                          xmlns:controls="clr-namespace:SizeBench.GUI.Controls"
                          xmlns:navigation="clr-namespace:SizeBench.GUI.Controls.Navigation"
                          xmlns:converters="clr-namespace:SizeBench.GUI.Converters"
                          xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing"
                          mc:Ignorable="d" 
                          d:DesignHeight="600" d:DesignWidth="600"
                          Title="{Binding PageTitle}">
    <Grid Margin="5">
        <Grid d:Visibility="Collapsed" Visibility="{Binding DoesFunctionExist, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}, ConverterParameter=Reverse}">
            <TextBlock TextWrapping="Wrap">
                <Run>Function: </Run><Run Text="{Binding NameOfNonexistentFunction, Mode=OneWay}"/><LineBreak/>
                <LineBreak/>
                <Run>This function does not exist in the binary - this can happen for a number of reasons.  Examples include:</Run><LineBreak/>
                <LineBreak/>
                <Run>&#x2981; The function was stripped out as dead code by /OPT:REF</Run><LineBreak/>
                <Run>&#x2981; The function was inlined at all usage sites, so it does not exist in a specific place</Run><LineBreak/>
                <Run>&#x2981; The function is pure virtual, which means it has no implementation.</Run>
            </TextBlock>
        </Grid>
        <Grid Visibility="{Binding DoesFunctionExist, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="BasicInfo">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="0,0,5,3"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Function Short Name:"/>
                    <controls:SelectableTextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Function.FormattedName.IncludeParentType, Mode=OneWay}" TextWrapping="Wrap"/>

                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Function Full Name:"/>
                    <controls:SelectableTextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Function.FullName, Mode=OneWay}" TextWrapping="Wrap"/>

                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Size on Disk and in Memory:"/>
                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding Function.Size, Mode=OneWay,Converter={x:Static converters:SizeToFriendlySizeConverter.Instance}}"/>

                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Is this a member function?:"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" d:Visibility="Collapsed"
                               Visibility="{Binding Function.IsMemberFunction, Mode=OneWay, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}, ConverterParameter=Reverse}"
                               Text="No"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" Visibility="{Binding Function.IsMemberFunction, Mode=OneWay, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}">
                        <Run Text="Yes, in"/>
                        <Hyperlink Command="{x:Static commands:AppCommands.NavigateToModel}"
                                   CommandParameter="{Binding Function.ParentType, Mode=OneWay}">
                            <TextBlock Text="{Binding Function.ParentType.Name, Mode=OneWay}" />
                        </Hyperlink>
                    </TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Other attributes:"/>
                    <TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding FunctionAttributes, Mode=OneWay}"/>
                </Grid>
            </Grid>

            <ScrollViewer x:Name="scroller" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Width="{Binding ViewportWidth, ElementName=scroller}"
                               HorizontalAlignment="Left">
                        Functions can be complex and composed of multiple things - the code in them, of course, but functions also create data in many
                        cases.  This page shows only the function's code.
                    </TextBlock>

                    <Expander Header="Code blocks" IsExpanded="True" Width="{Binding ViewportWidth, ElementName=scroller}"
                              HorizontalAlignment="Left">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding Source={x:Static drawing:SystemIcons.Information},
                                                    Converter={x:Static converters:IconToImageSourceConverter.Instance},
                                                    Mode=OneWay}" Width="15" />
                                <TextBlock TextWrapping="Wrap" Margin="5" Text="Tip: Hover over a section or COFF Group name in this table for a more human-readable description of what it is."/>
                            </StackPanel>

                            <TextBlock TextWrapping="Wrap" Visibility="{Binding DoesFunctionContainMultipleCodeBlocks, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}">
                                <Run>This function has multiple noncontiguous blocks of code, separated across different parts of the binary - this is usually caused by </Run>
                                <Hyperlink NavigateUri="https://docs.microsoft.com/cpp/build/profile-guided-optimizations?view=msvc-160">
                                    <i:Interaction.Behaviors>
                                        <navigation:ExternalHyperlinkNavigationBehavior/>
                                    </i:Interaction.Behaviors>
                                    Profile Guided Optimization (PGO)
                                </Hyperlink>
                                <Run> to help improve code locality and thus Disk I/O.</Run>
                            </TextBlock>

                            <DataGrid ItemsSource="{Binding BlockPlacements, Mode=OneWay}" Style="{StaticResource SymbolPlacementDataGridStyle}"/>
                        </StackPanel>
                    </Expander>

                    <Expander Header="Functions folded with this one" IsExpanded="True"
                              HorizontalAlignment="Left"
                              Visibility="{Binding IsFunctionCodeUsedForMultipleFunctions, Mode=OneWay, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}"
                              Width="{Binding ViewportWidth, ElementName=scroller}">
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                                <Run>This code is used for multiple functions due to Identical COMDAT Folding (ICF).  The linker determined that all these functions contained identical bytes of code,
                                so they were folded together to improve performance and disk footprint.  This is a good thing!  But it can make names confusing sometimes, as well as understanding
                                what source file, compiland, or lib contributed this code to the binary.</Run>
                                <LineBreak/>
                                <LineBreak/>
                                <Run>Note that the linker has thrown away information by the time SizeBench sees things, so the compiland, lib, and source file that the bytes are attributed to is
                                essentially random among the list of functions shown below.  So don't be surprised or confused if foo.obj is where the bytes are attributed, even though the function
                                is clearly in a different translation unit - SizeBench is doing the best it can, but the point is these bytes folded together and the cost needs to be attributed somewhere.</Run>
                                <LineBreak/>
                                <LineBreak/>
                                <Run>This is the list of the </Run>
                                <Run Text="{Binding FoldedFunctions.Count, Mode=OneWay}"/>
                                <Run> functions that all share these bytes of code, in alphabetical order:</Run>
                            </TextBlock>

                            <ItemsControl Margin="0,3,0,0" ItemsSource="{Binding FoldedFunctions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type symbols:IFunctionCodeSymbol}">
                                        <TextBlock Text="{Binding FullName}" TextTrimming="CharacterEllipsis"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Expander>

                    <Expander Header="Functions Inlined into this one" IsExpanded="True"
                              HorizontalAlignment="Left"
                              Visibility="{Binding HasInlineSites, Mode=OneWay, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}"
                              Width="{Binding ViewportWidth, ElementName=scroller}">
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                                <Run>These functions are inlined into this function.  Removing them may not save their "size" because the optimizer could make different decisions based on
                                the code that survives in the function.  Likewise, making them explicitly no-inline will not save all the size as some will remain for a call instruction and 
                                parameter passing.</Run>
                            </TextBlock>

                            <DataGrid ItemsSource="{Binding InlineSites, Mode=OneWay}"
                                      AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False"
                                      IsReadOnly="True" HeadersVisibility="Column" IsSynchronizedWithCurrentItem="True"
                                      SelectionMode="Single">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Function Name" Binding="{Binding Name, Mode=OneWay}"/>
                                    <DataGridTextColumn Header="Size" Binding="{Binding Size, Mode=OneWay}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </Expander>
                    
                    <Expander Header="Disassembly" IsExpanded="True" HorizontalAlignment="Left">
                        <controls:SelectableTextBlock Text="{Binding Disassembly, Mode=OneWay}"
                                                      FontSize="16" FontFamily="Consolas"/>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</navigation:SizeBenchPage>
